(ns hw.rendering
  (:require [domina :as dom]
            [io.pedestal.app.render.push :as render]
            [io.pedestal.app.render.events :as events]
            [io.pedestal.app.messages :as msg]
            [io.pedestal.app.render.push.templates :as templates]
            [io.pedestal.app.render.push.handlers.automatic :as d])
  (:require-macros [hw.html-templates :as html-templates]))

(def templates (html-templates/hw-templates))

(defn render-page [renderer [_ path] transmitter]
  (let [parent (render/get-parent-id renderer path)
        id (render/new-id! renderer path)
        html (templates/add-template renderer path (:hw-page templates))]
    (dom/append! (dom/by-id parent) (html {:id id :message ""}))))

(defn render-message [renderer [_ path _ new-value] transmitter]
  (templates/update-t renderer path {:message new-value}))

(defn button-enable [r [_ path transform-name messages] d]
  (events/send-on-click (dom/by-id "msg-button")
                          d
                          transform-name
                          [{msg/type :set-value msg/topic [:greeting] :value "Pedestal Rocks!"}
                           {msg/type :set-url msg/topic [:url] :value "Pedestal URL!"}]))
(defn render-config []
  [[:node-create  [:greeting] render-page]
   [:node-destroy   [:greeting] d/default-exit]
   [:value [:greeting] render-message]
   [:node-create  [:url] render-page]
   [:node-destroy   [:url] d/default-exit]
   [:value [:url] render-message]
   [:transform-enable [:greeting] button-enable]])
