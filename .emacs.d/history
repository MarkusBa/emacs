;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(erc-nick-history-list erc-server-history-list w3m-input-url-history regexp-history grep-files-history grep-regexp-history org-refile-history extended-command-history org-read-date-history command-history ido-buffer-history minibuffer-history tmphist ido-file-history))
(setq erc-nick-history-list '("markus"))
(setq erc-server-history-list '("irc.freenode.net"))
(setq w3m-input-url-history '("www.google.de" "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.reddit.com%2Fr%2Femacs" "http://www.reddit.com/r/emacs/comments/pm9n7/what_are_your_musthave_modes" "http://www.reddit.com/r/WTF" "http://i.imgur.com/NPUHyNQ.jpg" "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=reddit.com" "http://www.reddit.com/r/worldnews" "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.google.com" "http://imgur.com/Xs8J7AR" "http://i.imgur.com/FC0buIG.jpg" "http://imgur.com/FC0buIG" "http://www.reddit.com" "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.reddit.com" "http://i.imgur.com/cRbR6DA.jpg" "http://imgur.com/R03wAaA" "http://imgur.com/r/pics" "http://www.reddit.com/domain/imgur.com" "http://i.imgur.com/sLsAD.jpg" "http://www.reddit.com/domain/i.imgur.com" "http://i.imgur.com/lce0i.jpg" "http://imgur.com/3l4KDYl" "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.google.de"))
(setq regexp-history '("fortune" "google" "eww" "octave" "nethack" "ac-cake"))
(setq grep-files-history '("all"))
(setq grep-regexp-history '("google" "nethack"))
(setq org-refile-history '("Hi there"))
(setq extended-command-history '("eval-buffer" "package-list-packages" "eval-buffer" "package-list-packages" "butterfly" "rgrep" "w3m" "load-file" "scroll-up" "scroll-down" "load-file" "forward-page" "occur" "rgrep" "package-list-packages"))
(setq org-read-date-history '("   "))
(setq command-history '((eval-buffer) (package-list-packages nil) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (find-file "/home/markus/org/todo.org") (package-list-packages nil) (list-matching-lines "fortune" nil) (package-list-packages nil) (butterfly) (butterfly) (list-matching-lines "google" nil) (w3m-goto-url "http://www.google.com/search?btnI=I%%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.google.de" nil nil) (w3m "about:" nil t) (switch-to-buffer ".emacs") (load-file "/home/markus/.emacs") (switch-to-buffer ".emacs") (load-file "/home/markus/.emacs") (scroll-up nil) (scroll-down nil) (scroll-down nil) (find-file "/home/markus/.emacs") (switch-to-buffer ".emacs") (load-file "/home/markus/.emacs") (switch-to-buffer ".emacs") (forward-page 1) (find-file "/home/markus/.emacs") (switch-to-buffer "*scratch*") (occur "eww" nil) (occur "eww" nil)))
(setq ido-buffer-history '(".emacs" "*scratch*" "*Messages*" "*scratch*" "Test.org" ".emacs" "Test.org" "heise.org"))
(setq minibuffer-history '("6667" "emacs init" "heiseorg"))
(setq ido-file-history '("todo.org" "test.tst" "telefonliste" ".emacs" "." "Test.org" "home.org" "Test.org" "work.org" "home.org" ".emacs" "Test.org" ".emacs" "heise.org" "Test.org"))
